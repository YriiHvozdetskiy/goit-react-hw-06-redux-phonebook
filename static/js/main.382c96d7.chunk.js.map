{"version":3,"sources":["components/Filter/Filter.module.scss","components/Filter/Filter.jsx","components/ContactForm/ContactForm.jsx","components/Title/Title.jsx","components/ContactList/ContactList.jsx","App.js","index.js","components/ContactForm/ContactForm.module.scss","components/ContactList/ContactList.module.scss"],"names":["module","exports","Filter","value","onChange","inputListId","nanoid","className","s","label","htmlFor","input","id","ContactForm","coincidence","onSubmit","useState","name","setName","number","setNumber","nameInputId","phoneInputId","handleChange","e","target","form","autoComplete","preventDefault","toLowerCase","pattern","title","required","debounceTimeout","type","button","Title","children","ContactList","contacts","deleteContact","list","map","item","onClick","App","JSON","parse","window","localStorage","getItem","setContacts","filter","setFilter","useEffect","setItem","stringify","contact","prev","toast","success","currentName","find","error","length","currentTarget","normalizedFilter","includes","getVisibleContacts","n","toastOptions","style","background","color","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.382c96d7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1vRE6\",\"input\":\"Filter_input__LcH9a\"};","import { nanoid } from 'nanoid';\r\n\r\nimport s from './Filter.module.scss';\r\n\r\nfunction Filter({ value, onChange }) {\r\n  const inputListId = nanoid();\r\n  return (\r\n    <>\r\n      <label className={s.label} htmlFor={inputListId}>\r\n        Find contacts by name\r\n      </label>\r\n      <input\r\n        className={s.input}\r\n        id={inputListId}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import { useState } from 'react';\r\nimport { nanoid } from 'nanoid';\r\nimport { DebounceInput } from 'react-debounce-input';\r\n\r\nimport s from './ContactForm.module.scss';\r\n\r\nexport const  ContactForm =({coincidence= true ,onSubmit})=>{\r\n  const [name,setName]= useState('')\r\n  const [number,setNumber]= useState('')\r\n\r\n  const nameInputId = nanoid();\r\n  const phoneInputId = nanoid();\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value)\r\n        break;\r\n\r\n        case 'number':\r\n        setNumber(value)\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (coincidence(name.toLowerCase())) return;\r\n    \r\n    onSubmit(name, number);\r\n\r\n    setName('')\r\n    setNumber('')\r\n  };\r\n\r\n    return (\r\n      <>\r\n        <form\r\n          className={s.form}\r\n          autoComplete=\"off\"\r\n          onSubmit={handleSubmit}\r\n        >\r\n          <>\r\n            <label className={s.label} htmlFor={nameInputId}>\r\n              Name\r\n            </label>\r\n            <DebounceInput\r\n              className={s.input}\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              id={nameInputId}\r\n              value={name}\r\n              debounceTimeout={300}\r\n              onChange={handleChange}\r\n            />\r\n\r\n            {/* <input\r\n              className={s.input}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              id={nameInputId}\r\n              onChange={handleName}\r\n              value={name}\r\n            /> */}\r\n\r\n            <label className={s.label} htmlFor={phoneInputId}>\r\n              Number\r\n            </label>\r\n            <DebounceInput\r\n              className={s.input}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              id={phoneInputId}\r\n              value={number}\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              debounceTimeout={300}\r\n              onChange={handleChange}\r\n            />\r\n            {/* <input\r\n              className={s.input}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              id={phoneInputId}\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              onChange={handleNumber}\r\n              value={state.number}\r\n            /> */}\r\n\r\n            <button className={s.button} type=\"submit\">\r\n              Add contact\r\n            </button>\r\n          </>\r\n        </form>\r\n      </>\r\n    );\r\n}\r\n\r\n","function Title({ children }) {\r\n  return (\r\n    <>\r\n      <h1>{children}</h1>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Title;\r\n","import s from '././ContactList.module.scss';\r\n\r\nfunction ContactList({ contacts, deleteContact }) {\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts && contacts.map(({ id, name, number }) => {\r\n        return (\r\n          <li className={s.item} key={id}>\r\n            <span>{name}</span>: <span>{number}</span>\r\n            <button\r\n              className={s.button}\r\n              type=\"button\"\r\n              id={id}\r\n              onClick={deleteContact}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default ContactList;\r\n","import { nanoid } from 'nanoid';\r\nimport { useEffect, useState } from 'react';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\n\r\nimport Filter from 'components/Filter/Filter';\r\nimport { ContactForm } from './components/ContactForm/ContactForm';\r\nimport Title from './components/Title/Title';\r\nimport ContactList from 'components/ContactList/ContactList';\r\n\r\nexport function App () {\r\n  const [contacts,setContacts] = useState(()=>{\r\n    return JSON.parse(window.localStorage.getItem('contacts')) ?? ''\r\n  })\r\n\r\n  const [filter,setFilter]= useState('')\r\n\r\n  useEffect(()=>{\r\n    window.localStorage.setItem('contacts',JSON.stringify(contacts))\r\n  },[contacts])\r\n\r\n\r\n  const addContact = (name, number) => {\r\n    const contact = { id: nanoid(), name, number };\r\n\r\n    setContacts(prev=>{\r\n      return [contact, ...prev]\r\n    })\r\n\r\n    toast.success(`${name} added a contact`);\r\n  };\r\n\r\n  const deleteContact = e => {\r\n    const id = e.currentTarget.id;\r\n    setContacts(contacts.filter(n => n.id !== id))\r\n    toast.success(`deleted contact`);\r\n  };\r\n\r\n  const changeFilter = e => {\r\n    setFilter(e.currentTarget.value)\r\n  };\r\n\r\n  const getVisibleContacts = () => {\r\n    if (!contacts) return\r\n\r\n    const normalizedFilter = filter.toLowerCase();\r\n   return  contacts.filter(({name})=> name.toLowerCase().includes(normalizedFilter))\r\n  };\r\n\r\n  const  handleCoincidence = currentName => {\r\n    if (!contacts) return\r\n\r\n    if (contacts.find(({ name }) => name.toLowerCase() === currentName)) {\r\n      toast.error(`${currentName} is already in contacts`);\r\n      return true;\r\n    }\r\n  };\r\n  return (\r\n      <>\r\n        <Title>Phonebook</Title>\r\n        <ContactForm\r\n          onSubmit={addContact}\r\n          coincidence={handleCoincidence}\r\n        />\r\n        <Title>Contacts</Title>\r\n        {contacts.length !== 0 && <Filter value={filter} onChange={changeFilter} />}\r\n        <ContactList\r\n          contacts={getVisibleContacts()}\r\n          deleteContact={deleteContact}\r\n        />\r\n        <Toaster\r\n          toastOptions={{\r\n            success: {\r\n              style: {\r\n                background: 'green',\r\n                color:'#fff',\r\n              },\r\n            },\r\n            error: {\r\n              style: {\r\n                background: 'red',\r\n                color:'#fff',\r\n              },\r\n            },\r\n          }}\r\n        />\r\n      </>\r\n    );\r\n}\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport { App }from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2aQjm\",\"button\":\"ContactForm_button__2KRaK\",\"label\":\"ContactForm_label__BAyTn\",\"input\":\"ContactForm_input__3ChMC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__27qi7\",\"item\":\"ContactList_item__wMJ2j\",\"button\":\"ContactList_button__dG8hB\"};"],"sourceRoot":""}